name: vprof-code
on: workflow_dispatch
env:
  EKS_CLUSTER: vprof-eks-gitops
  AWS_REGION: us-east-1
  ECR_REPOSITORY: git-ops-vprof



jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: "Source-code checkout"
        uses: actions/checkout@v4

      - name: "Maven Testing"
        run: mvn test


      - name: "Maven checkstyle"
        run: mvn checkstyle:checkstyle

      - name: "Java setup"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: "Sonar setup"
        uses: warchant/setup-sonar-scanner@v7

      - name: "Sonarquobe scanner"
        run: sonar-scanner
           -Dsonar.host.url=${{ secrets.SONAR_URL }}
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}
           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
           -Dsonar.sources=src
           -Dsonar.junit.reportsPath=target/surefire-reports
           -Dsonar.jacoco.reportsPath=target/jacoco.exec 
           -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
           -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest

      # - name: "Quality gates"
      #   id: sonar-qg
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

  Image_build_and_deploy:
    needs: Testing
    runs-on: ubuntu-latest
    steps: 

      - name: "Source code Checkout"
        uses: actions/checkout@v4

      - name: "Build and publish to ECR"
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY  }}
          registry: ${{ secrets.REGISTRY }}
   
          repo: ${{env.ECR_REPOSITORY}}
          region: us-east-1
          tags: latest,${{github.run_number}}
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./
     
  deploy_to_eks:
    needs: Image_build_and_deploy
    runs-on: ubuntu-latest


    steps:
      - name: "Sourcecode-checkout"
        uses: actions/checkout@v4


      - name: "Aws credentials"
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: "Get the kubeconfig file"
        run: aws eks update-kubeconfig --region ${{env.AWS_REGION}} --name ${{env.EKS_CLUSTER}}


      - name: "Storing the secret in the kube for helm"
        run: kubectl create secret docker-registry regcred --docker-server=${{ secrets.REGISTRY }} --docker-username=AWS  --docker-password=$(aws ecr get-login-password)


      - name: deploy on eks using helm
        
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.12
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          cluster-name: vprof-eks-gitops
          #config-files: .github/values/dev.yaml
          chart-path: helm/
          namespace: default
          values: appimg=${{secrets.REGISTRY}}/${{env.ECR_REPOSITORY}},apptag=${{github.run_number}}
          name: vprof-helm
        
        
     
  
        
  
